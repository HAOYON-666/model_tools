model:
  arch: video_llama
  model_type: pretrain_vicuna
  freeze_vit: True
  freeze_qformer: True
  max_txt_len: 512
  end_sym: "###"
  low_resource: False

  frozen_llama_proj: False

# ./home/user/miniconda3/envs/zmp/lib/python3.9/site-packages/torch/lib/libtorch_cuda_cpp.so

# cp ./home/user/miniconda3/envs/zmp/lib/python3.9/site-packages/torch/lib/libtorch_cuda_cpp.so ./home/user/miniconda3/envs/videollama/lib/python3.9/site-packages/torch/lib/
# export LD_LIBRARY_PATH=/home/user/miniconda3/envs/videollama/lib/python3.9/site-packages/torch/lib:$LD_LIBRARY_PATH
  # If you want use LLaMA-2-chat,
  # some ckpts could be download from our provided huggingface repo
  # i.e.  https://huggingface.co/DAMO-NLP-SG/Video-LLaMA-2-13B-Finetuned
  llama_model: "./Video-LLaMA-2-13B-Pretrained/llama-2-13b-chat-hf" 
  # "ckpt/vicuna-13b/" or "ckpt/vicuna-7b/" or "ckpt/llama-2-7b-chat-hf"  or "ckpt/llama-2-13b-chat-hf"
  imagebind_ckpt_path: "./Video-LLaMA-2-13B-Pretrained/imagebind_huge.pth"
  # "ckpt/imagebind_path/"
  ckpt: "./Video-LLaMA-2-13B-Pretrained/VL_LLaMA_2_13B_Pretrained.pth"
  # 'path/pretrained_visual_branch_ckpt'   # you can use our pretrained ckpt from https://huggingface.co/DAMO-NLP-SG/Video-LLaMA-2-13B-Pretrained/
  ckpt_2: "./Video-LLaMA-2-13B-Pretrained/AL_LLaMA_2_13B_Pretrained.pth"
  # 'path/pretrained_audio_branch_ckpt'

  equip_audio_branch: True  # whether equips the audio branch
  fusion_head_layers: 2
  max_frame_pos: 32
  fusion_header_type: "seqTransf"


datasets:
  webvid:
    vis_processor:
      train:
        name: "alpro_video_eval"
        n_frms: 8
        image_size: 224
    text_processor:
      train:
        name: "blip_caption"

run:
  task: video_text_pretrain
